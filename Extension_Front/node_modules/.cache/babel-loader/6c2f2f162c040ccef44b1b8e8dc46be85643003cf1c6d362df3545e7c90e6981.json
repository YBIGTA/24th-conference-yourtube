{"ast":null,"code":"// import { google } from 'googleapis';\n// import getAuthenticate from './getOauth2Client.js';\n//\n// function downloadFile(data, fileName) {\n//     const json = JSON.stringify(data, null, 2);\n//     const blob = new Blob([json], { type: 'application/json' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = fileName;\n//     document.body.appendChild(a);\n//     a.click();\n//     a.remove();\n//     URL.revokeObjectURL(url);\n// }\n//\n// async function getSubscriptions() {\n//     const oauth2Client = await getAuthenticate();\n//\n//     let result = [];\n//     let params = {\n//         part: 'snippet',\n//         mine: true,\n//         order: 'unread',\n//         maxResults: 50,\n//         headers: { 'Content-Type': 'application/json' }\n//     };\n//\n//     while (true) {\n//         let youtubeRes = await google.youtube({\n//             version: 'v3',\n//             auth: oauth2Client\n//         }).subscriptions.list(params);\n//\n//         result = [...result, ...youtubeRes.data.items.map(item => ({\n//             channelId: item.snippet.resourceId.channelId,\n//             channelTitle: item.snippet.title,\n//             thumbnail: item.snippet.thumbnails.default.url\n//         }))];\n//\n//         if (youtubeRes.data.nextPageToken == undefined) {\n//             break;\n//         } else {\n//             params.pageToken = youtubeRes.data.nextPageToken;\n//         }\n//     }\n//\n//     downloadFile(result, 'subscriptions.json');\n//     console.log('Subscriptions saved as JSON file.');\n//     return result;\n// }\n//\n// export default getSubscriptions;","map":{"version":3,"names":[],"sources":["/Users/davidkim/Desktop/YourTube_Extension/24-1_YourTube/src/youtueb_API/getSubscriptions.js"],"sourcesContent":["// import { google } from 'googleapis';\n// import getAuthenticate from './getOauth2Client.js';\n//\n// function downloadFile(data, fileName) {\n//     const json = JSON.stringify(data, null, 2);\n//     const blob = new Blob([json], { type: 'application/json' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url;\n//     a.download = fileName;\n//     document.body.appendChild(a);\n//     a.click();\n//     a.remove();\n//     URL.revokeObjectURL(url);\n// }\n//\n// async function getSubscriptions() {\n//     const oauth2Client = await getAuthenticate();\n//\n//     let result = [];\n//     let params = {\n//         part: 'snippet',\n//         mine: true,\n//         order: 'unread',\n//         maxResults: 50,\n//         headers: { 'Content-Type': 'application/json' }\n//     };\n//\n//     while (true) {\n//         let youtubeRes = await google.youtube({\n//             version: 'v3',\n//             auth: oauth2Client\n//         }).subscriptions.list(params);\n//\n//         result = [...result, ...youtubeRes.data.items.map(item => ({\n//             channelId: item.snippet.resourceId.channelId,\n//             channelTitle: item.snippet.title,\n//             thumbnail: item.snippet.thumbnails.default.url\n//         }))];\n//\n//         if (youtubeRes.data.nextPageToken == undefined) {\n//             break;\n//         } else {\n//             params.pageToken = youtubeRes.data.nextPageToken;\n//         }\n//     }\n//\n//     downloadFile(result, 'subscriptions.json');\n//     console.log('Subscriptions saved as JSON file.');\n//     return result;\n// }\n//\n// export default getSubscriptions;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}