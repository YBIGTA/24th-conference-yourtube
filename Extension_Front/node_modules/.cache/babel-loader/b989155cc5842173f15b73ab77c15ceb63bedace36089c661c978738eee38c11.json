{"ast":null,"code":"import'./App.css';import Popup from\"./components/popup\";import getSubscriptions from\"./youtueb_API/getSubscriptions\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){// const [openAlert, setOpenAlert] = useState(false)\nconst now=new Date();console.log(\"nownow :\",now);const year=now.getFullYear();const month=String(now.getMonth()+1).padStart(2,'0');// Months are 0-indexed\nconst day=String(now.getDate()).padStart(2,'0');const hours=String(now.getHours()).padStart(2,'0');const minutes=String(now.getMinutes()).padStart(2,'0');const formattedDate=\"\".concat(year,\"/\").concat(month,\"/\").concat(day,\" \").concat(hours,\"\\uC2DC \").concat(minutes,\"\\uBD84\");const message=\"\".concat(formattedDate,\" \\uAE30\\uC900\\uC73C\\uB85C \\n\\uC5C5\\uB370\\uC774\\uD2B8\\uAC00 \\uC694\\uCCAD\\uB410\\uC2B5\\uB2C8\\uB2E4.\");//수동 업데이트 버튼 함수 -> 구독 채널 정보를 가져옴\n// const handleUpdateML = () => {\n//     console.log(\"버튼 클릭됌.\")\n//     // getSubscriptions();\n//     window.alert(message)\n//     // setOpenAlert(true)\n// }\nconst handleRequestToFlaskForAPI=async()=>{console.log(\"Flask로 유튜브 구독 채널 목록 요청\");try{const response=await fetch(\"http://localhost:5000/subscriptions\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}// body: JSON.stringify({storeName, storeAddress, storeContact})\n});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();console.log(\"Response from Flask :\",data);window.alert(message);}catch(error){console.error('Failed to fetch:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(Popup,{handleOpen:handleRequestToFlaskForAPI})})});}export default App;","map":{"version":3,"names":["Popup","getSubscriptions","jsx","_jsx","App","now","Date","console","log","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDate","concat","message","handleRequestToFlaskForAPI","response","fetch","method","headers","ok","Error","data","json","window","alert","error","className","children","handleOpen"],"sources":["/Users/davidkim/Desktop/YourTube_Extension/24-1_YourTube/src/App.js"],"sourcesContent":["import './App.css';\nimport Popup from \"./components/popup\";\nimport getSubscriptions from \"./youtueb_API/getSubscriptions\";\n\nfunction App() {\n    // const [openAlert, setOpenAlert] = useState(false)\n    const now = new Date();\n    console.log(\"nownow :\", now)\n\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    const formattedDate = `${year}/${month}/${day} ${hours}시 ${minutes}분`;\n    const message = `${formattedDate} 기준으로 \\n업데이트가 요청됐습니다.`;\n\n    //수동 업데이트 버튼 함수 -> 구독 채널 정보를 가져옴\n    // const handleUpdateML = () => {\n    //     console.log(\"버튼 클릭됌.\")\n    //     // getSubscriptions();\n    //     window.alert(message)\n    //     // setOpenAlert(true)\n    // }\n\n    const handleRequestToFlaskForAPI = async () => {\n    console.log(\"Flask로 유튜브 구독 채널 목록 요청\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/subscriptions\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        // body: JSON.stringify({storeName, storeAddress, storeContact})\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(\"Response from Flask :\", data)\n        window.alert(message)\n\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <Popup handleOpen={handleRequestToFlaskForAPI} />\n        </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX;AACA,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEH,GAAG,CAAC,CAE5B,KAAM,CAAAI,IAAI,CAAGJ,GAAG,CAACK,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAC,KAAK,CAAGC,MAAM,CAACP,GAAG,CAACQ,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAE;AAC3D,KAAM,CAAAC,GAAG,CAAGH,MAAM,CAACP,GAAG,CAACW,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAClD,KAAM,CAAAG,KAAK,CAAGL,MAAM,CAACP,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACrD,KAAM,CAAAK,OAAO,CAAGP,MAAM,CAACP,GAAG,CAACe,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAEzD,KAAM,CAAAO,aAAa,IAAAC,MAAA,CAAMb,IAAI,MAAAa,MAAA,CAAIX,KAAK,MAAAW,MAAA,CAAIP,GAAG,MAAAO,MAAA,CAAIL,KAAK,YAAAK,MAAA,CAAKH,OAAO,UAAG,CACrE,KAAM,CAAAI,OAAO,IAAAD,MAAA,CAAMD,aAAa,oGAAuB,CAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAG,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC/CjB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAErC,GAAI,CACF,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAClEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACA;AACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCzB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEuB,IAAI,CAAC,CACxCE,MAAM,CAACC,KAAK,CAACX,OAAO,CAAC,CAEzB,CAAE,MAAOY,KAAK,CAAE,CACd5B,OAAO,CAAC4B,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC1C,CACF,CAAC,CAED,mBACEhC,IAAA,QAAKiC,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBlC,IAAA,WAAQiC,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC1BlC,IAAA,CAACH,KAAK,EAACsC,UAAU,CAAEd,0BAA2B,CAAE,CAAC,CAC7C,CAAC,CACR,CAAC,CAEV,CAEA,cAAe,CAAApB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}