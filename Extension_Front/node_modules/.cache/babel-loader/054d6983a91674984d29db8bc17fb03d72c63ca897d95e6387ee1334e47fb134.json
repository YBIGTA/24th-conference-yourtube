{"ast":null,"code":"// getSubscriptions.mjs\nimport{google}from'googleapis';import getAuthenticate from'./getOauth2Client.js';import fs from'fs';async function getSubscriptions(){// 저장된 OAuth2 클라이언트 토큰을 읽어옴\nconst oauth2Client=await getAuthenticate();let result=[];let params={part:'snippet',mine:true,order:'unread',maxResults:50,headers:{'Content-Type':'application/json'}};while(true){let youtubeRes=await google.youtube({version:'v3',auth:oauth2Client}).subscriptions.list(params);result=[...result,...youtubeRes.data.items.map(item=>({channelId:item.snippet.resourceId.channelId,channelTitle:item.snippet.title,thumbnail:item.snippet.thumbnails.default.url}))];if(youtubeRes.data.nextPageToken==undefined){break;}else{params.pageToken=youtubeRes.data.nextPageToken;}}fs.writeFileSync('subscriptions.json',JSON.stringify(result,null,2));return result;}export default getSubscriptions;// getSubscriptions();","map":{"version":3,"names":["google","getAuthenticate","fs","getSubscriptions","oauth2Client","result","params","part","mine","order","maxResults","headers","youtubeRes","youtube","version","auth","subscriptions","list","data","items","map","item","channelId","snippet","resourceId","channelTitle","title","thumbnail","thumbnails","default","url","nextPageToken","undefined","pageToken","writeFileSync","JSON","stringify"],"sources":["/Users/davidkim/Desktop/YourTube_Extension/24-1_YourTube/src/youtueb_API/getSubscriptions.js"],"sourcesContent":["// getSubscriptions.mjs\nimport { google } from 'googleapis';\nimport getAuthenticate from './getOauth2Client.js';\nimport fs from 'fs';\n\nasync function getSubscriptions() {\n    // 저장된 OAuth2 클라이언트 토큰을 읽어옴\n    const oauth2Client = await getAuthenticate();\n\n    let result = [];\n    let params = {\n        part: 'snippet',\n        mine: true,\n        order: 'unread',\n        maxResults: 50,\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    while (true) {\n        let youtubeRes = await google.youtube({\n            version: 'v3',\n            auth: oauth2Client\n        }).subscriptions.list(params);\n\n        result = [...result, ...youtubeRes.data.items.map(item => ({\n            channelId: item.snippet.resourceId.channelId,\n            channelTitle: item.snippet.title,\n            thumbnail: item.snippet.thumbnails.default.url\n        }))];\n\n        if (youtubeRes.data.nextPageToken == undefined) {\n            break;\n        } else {\n            params.pageToken = youtubeRes.data.nextPageToken;\n        }\n    }\n\n    fs.writeFileSync('subscriptions.json', JSON.stringify(result, null, 2));\n\n    return result;\n}\n\nexport default getSubscriptions;\n\n// getSubscriptions();"],"mappings":"AAAA;AACA,OAASA,MAAM,KAAQ,YAAY,CACnC,MAAO,CAAAC,eAAe,KAAM,sBAAsB,CAClD,MAAO,CAAAC,EAAE,KAAM,IAAI,CAEnB,cAAe,CAAAC,gBAAgBA,CAAA,CAAG,CAC9B;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAH,eAAe,CAAC,CAAC,CAE5C,GAAI,CAAAI,MAAM,CAAG,EAAE,CACf,GAAI,CAAAC,MAAM,CAAG,CACTC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,QAAQ,CACfC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAClD,CAAC,CAED,MAAO,IAAI,CAAE,CACT,GAAI,CAAAC,UAAU,CAAG,KAAM,CAAAZ,MAAM,CAACa,OAAO,CAAC,CAClCC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAEX,YACV,CAAC,CAAC,CAACY,aAAa,CAACC,IAAI,CAACX,MAAM,CAAC,CAE7BD,MAAM,CAAG,CAAC,GAAGA,MAAM,CAAE,GAAGO,UAAU,CAACM,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,GAAK,CACvDC,SAAS,CAAED,IAAI,CAACE,OAAO,CAACC,UAAU,CAACF,SAAS,CAC5CG,YAAY,CAAEJ,IAAI,CAACE,OAAO,CAACG,KAAK,CAChCC,SAAS,CAAEN,IAAI,CAACE,OAAO,CAACK,UAAU,CAACC,OAAO,CAACC,GAC/C,CAAC,CAAC,CAAC,CAAC,CAEJ,GAAIlB,UAAU,CAACM,IAAI,CAACa,aAAa,EAAIC,SAAS,CAAE,CAC5C,MACJ,CAAC,IAAM,CACH1B,MAAM,CAAC2B,SAAS,CAAGrB,UAAU,CAACM,IAAI,CAACa,aAAa,CACpD,CACJ,CAEA7B,EAAE,CAACgC,aAAa,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAAC/B,MAAM,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CAEvE,MAAO,CAAAA,MAAM,CACjB,CAEA,cAAe,CAAAF,gBAAgB,CAE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}